<<<<<<< HEAD
version: '3.7'
=======
version: '3'
>>>>>>> angular-universal-docker

networks:
  web:
    name: web
<<<<<<< HEAD
    external:
      true
  backend:
    name: backend
    external:
      true

services:

  ####### uncomment out either production for remote or dev for local #######
  ###########################################################################


  paragon-production:
    container_name: paragon-angular-universal
    restart: always

    build:
      context: .
    command: npm run start
    ports:
      - 4000:4000
    networks:
      -  web
      - backend
    volumes:
      - ./dist/ospreyProduction:/dist/ospreyProduction/

  # ospreyDev:
  #   container_name: paragon-angular-universal-dev
  #   restart: always

  #   build:
  #     context: .
  #   command: npm run start
  #   ports:
  #     - 4000:4000
  #   networks:
  #     - traefik-proxy
  #     - backend
  #   volumes:
  #     - ./dist/ospreyProduction:app
  #   labels:
  #   - "traefik.enable=true"
  #   - "traefik.docker.network=traefik-proxy"
  #   - "traefik.http.routers.node-app.rule=Host(`localhost`)"
  #   - "traefik.http.services.node-app-again.loadBalancer.server.port=4000"
=======
    external: true
  backend:
    name: backend
    external: true


services:
  paragon-angular-universal:
    container_name: paragon-angular-universal
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '4000:4000'
    volumes:
      - ./dist/paragonProduction:/app/
    # labels:
    #   - "traefik.enable=true"
    #   - "traefik.http.routers.paragon.rule=Host(`staging.wearenv.co.uk`) && Path(`/paragon-angular`)"
    #   - "traefik.http.routers.paragon.entrypoints=web"
    #   - "traefik.http.services.paragon.loadbalancer.server.port=4000"
    networks:
      - web
      - backend
>>>>>>> angular-universal-docker
